apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: three-tier-app-ns
  labels:
    app: web
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLebals:
      app: web
      tier: frontend
  minReadySeconds: 5
  type: RollingUpdate
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: web
        tier: frontend
    spec:
      containers:
      - name: nginx
        image: nginx:1.12
        imagePullPolicy: IfNotPresent
        Port:
        - containerPort: 8080
        resources:
          limits:
            cpu: 1
          requests:
            cpu: 0.2
        env:
        - name: API_URL #application variable name - like api url as stated in the application .env or config file
          valueFrom:
            configMapKeyRef:
              name: web-configmap
              key: api_connection_url

---

apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: three-tier-app-ns
spec:
  selector:
    app: web #  label name from the deployment yaml file
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080 # This must correspond to the port in the deployment yaml file for the application

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: three-tier-app-ns
  labels:
    app: api
    tier: backend
spec:
  replicas: 2
  selector:
    matchLebals:
      app: api
      tier: backend
  minReadySeconds: 5
  type: RollingUpdate
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: api
        tier: backend
    spec:
      containers:
      - name: nginx
        image: nginx:1.12
        imagePullPolicy: IfNotPresent
        Port:
        - containerPort: 3000
        resources:
          limits:
            cpu: 1
          requests:
            cpu: 0.2
        env:
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: password
        - name: DATABASE_URL #application variable name - like api url as stated in the application .env or config file
          valueFrom:
            configMapKeyRef:
              name: database-configmap
              key: database_connection_url

---

apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: three-tier-app-ns
spec:
  selector:
    app: api #  label name from the deployment yaml file
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000 # This must correspond to the port in the deployment yaml file for the application